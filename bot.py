# bot.py
"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram-–±–æ—Ç–∞.
–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞.
"""

import logging
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    filters,
)
from telegram import BotCommand

# --- –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
import config
from jobs.check_bundle_alerts import check_bundle_alerts # TODO: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ, –∫–æ–≥–¥–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ—Ç–µ

# --- –ú–æ–¥—É–ª–∏ —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ ---
from handlers import commands, callbacks, messages
from handlers.conv_activate import conv_activate
from jobs.price_job import update_sol_price_job

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(name)s] - [%(levelname)s] - %(message)s",
)
logger = logging.getLogger(__name__)


async def post_init(application: Application):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º polling'–∞."""
    await application.bot.set_my_commands([
        BotCommand("start", "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å / –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"),
        BotCommand("language", "‚öôÔ∏è –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"),
    ])
    
    # TODO: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –±–ª–æ–∫, –∫–æ–≥–¥–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ—Ç–µ check_bundle_alerts –≤ jobs/
    application.job_queue.run_repeating(
        check_bundle_alerts,
        interval=30,
        first=15,
        name="bundle_alerts_job"
    )
    application.job_queue.run_repeating(
        update_sol_price_job, 
        interval=3600, 
        first=1, 
        name="update_sol_price"
    )
    logger.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    if not config.TELEGRAM_BOT_TOKEN:
        logger.critical("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env! –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω.")
        return

    # 1. –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = (
        Application.builder()
        .token(config.TELEGRAM_BOT_TOKEN)
        .post_init(post_init)
        .build()
    )

    # 2. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ –º–æ–¥—É–ª–µ–π
    # –ö–∞–∂–¥—ã–π —Ö–µ–Ω–¥–ª–µ—Ä —Ç–µ–ø–µ—Ä—å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ñ–∞–π–ª–µ.
    
    # --- –ö–æ–º–∞–Ω–¥—ã ---
    application.add_handler(CommandHandler("start", commands.start))
    application.add_handler(conv_activate)

    # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ ---
    application.add_handler(CallbackQueryHandler(callbacks.set_language_callback, pattern="^set_lang_"))
    application.add_handler(CallbackQueryHandler(callbacks.main_menu_callback_handler, pattern="^mainmenu_"))
    application.add_handler(CallbackQueryHandler(callbacks.show_main_menu, pattern="^main_menu$"))
    application.add_handler(CallbackQueryHandler(callbacks.parse_submenu_callback, pattern="^parse_"))
    application.add_handler(CallbackQueryHandler(callbacks.token_settings_callback, pattern="^tokensettings_"))
    application.add_handler(CallbackQueryHandler(callbacks.platform_selection_callback, pattern="^platform_"))
    application.add_handler(CallbackQueryHandler(callbacks.period_selection_callback, pattern="^period_"))
    application.add_handler(CallbackQueryHandler(callbacks.bundle_tracker_callback, pattern="^bundle_"))
    application.add_handler(CallbackQueryHandler(callbacks.template_settings_callback, pattern="^template_set_"))
    application.add_handler(CallbackQueryHandler(callbacks.template_management_callback, pattern="^template_"))
    application.add_handler(CallbackQueryHandler(callbacks.category_selection_callback, pattern="^category_"))
    application.add_handler(CallbackQueryHandler(callbacks.dev_parse_settings_callback, pattern="^devparse_"))
    application.add_handler(CallbackQueryHandler(callbacks.main_menu_callback_handler, pattern="^mainmenu_"))
    application.add_handler(CallbackQueryHandler(callbacks.pnl_filter_callback_handler, pattern="^pnl_filter_"))
    application.add_handler(CallbackQueryHandler(callbacks.language_settings_callback, pattern="^settings_language$"))
    application.add_handler(CallbackQueryHandler(callbacks.dev_pnl_filter_callback_handler, pattern="^dev_pnl_filter_"))

    
    # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–µ–∫—Å—Ç –∏ —Ñ–∞–π–ª—ã) ---
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, messages.handle_text))
    application.add_handler(MessageHandler(filters.Document.TXT, messages.handle_document))

    # 3. –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    application.run_polling()


if __name__ == "__main__":
    main()